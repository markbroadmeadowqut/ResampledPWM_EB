/*
 * CMPA_calc.c
 *
 *  Created on: 16Jan.,2017
 *      Author: Edward
 */

#include "DSP28x_Project.h"
#include "config.h"
#include <math.h>

interrupt void isr_CMPA_calc1(void);

volatile Uint16 count=0;

void initCMPAcalc() {
	EALLOW;
	PieVectTable.EPWM1_INT = &isr_CMPA_calc1;
	EDIS;

	PieCtrlRegs.PIEIER3.bit.INTx1 = 1;     // Enable ePWM1_int
	IER |= M_INT3;

	//DEBUG
	//GpioDataRegs.GPACLEAR.bit.GPIO29 = 1;
	EALLOW;
	GpioCtrlRegs.GPADIR.bit.GPIO29 = 1;				// Set GPIO29 as output
	EDIS;

	Uint16 table[1024]={0x00,0x012...};

}


#pragma CODE_SECTION(isr_CMPA_calc1, "ramfuncs");
interrupt void isr_CMPA_calc1(void)
{

	count=count+1;
	if(mod(count,20)==0) {
		EPwm1Regs.CMPB = software_forced_toggle;
	}
	EPwm1Regs.CMPA.half.CMPA=table[count&0xFFF];


	// Acknowledge this interrupt to receive more interrupts from group 1
	PieCtrlRegs.PIEACK.all = PIEACK_GROUP3;
}
